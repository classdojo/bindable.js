// Generated by CoffeeScript 1.4.0

/*
 Glues stuff together
*/


(function() {

  module.exports = (function() {
    /*
    */

    function _Class(from, property) {
      this.from = from;
      this.property = property;
      this._limit = -1;
    }

    /*
       binds to a target
    */


    _Class.prototype.to = function(target, propertyOrListener) {};

    /*
       runs the binding just once
    */


    _Class.prototype.once = function() {
      return this.limit(1);
    };

    /*
       limits the number of times the binding can be called
    */


    _Class.prototype.limit = function(count) {
      this._limit = count;
      return this;
    };

    /*  
     makes the binding go both ways.
    */


    _Class.prototype.bothWays = function() {
      return this;
    };

    /*
       removes the binding
    */


    _Class.prototype.dispose = function() {};

    /*
       triggers the binding *if* it exists
    */


    _Class.prototype.trigger = function() {
      return this;
    };

    return _Class;

  })();

}).call(this);
