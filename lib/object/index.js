// Generated by CoffeeScript 1.4.0
(function() {
  var Binding, EventEmitter2, dref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  dref = require("dref");

  EventEmitter2 = require("eventemitter2").EventEmitter2;

  Binding = require("./binding");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    /*
    */


    function _Class(data) {
      this.data = data;
      _Class.__super__.constructor.call(this, {
        wildcard: true
      });
    }

    /*
    */


    _Class.prototype.get = function(key) {
      return dref.get(this.data, key) || this._ref(this, key);
    };

    /*
    */


    _Class.prototype.has = function(key) {
      return !!this.get(key);
    };

    /*
    */


    _Class.prototype.set = function(key, value) {
      var k;
      if (arguments.length === 1) {
        for (k in key) {
          this.set(k, key[k]);
        }
        return;
      }
      dref.set(this.data, key, value);
      this.emit("change:" + key, value);
      return this.emit("change", value);
    };

    /*
    */


    _Class.prototype._ref = function(context, key) {
      if (!key) {
        return context;
      }
      return dref.get(context, key);
    };

    /*
    */


    _Class.prototype.bind = function(property) {
      return new Binding(this, property);
    };

    return _Class;

  })(EventEmitter2);

}).call(this);
