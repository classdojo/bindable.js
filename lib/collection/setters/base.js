// Generated by CoffeeScript 1.6.2
(function() {
  var async, utils;

  utils = require("../../core/utils");

  async = require("async");

  module.exports = (function() {
    /*
    */
    function _Class(binding, target) {
      this.binding = binding;
      this.target = target;
      this._transformer = binding.transform();
      this._filter = binding.filter();
      this.init();
    }

    /*
    */


    _Class.prototype.init = function() {};

    /*
    */


    _Class.prototype.dispose = function() {};

    /*
    */


    _Class.prototype.change = function(event, item) {
      if (event === "reset") {
        return this._changeItems(event, item);
      } else {
        return this._changeItem(event, item);
      }
    };

    /*
    */


    _Class.prototype._changeItem = function(event, item) {
      var _this = this;

      if (this._filter) {
        if (!this._filter(item)) {
          return;
        }
      }
      return this.__transform("to", item, function(err, item) {
        if (err) {
          throw err;
        }
        return _this._change(event, item);
      });
    };

    /*
    */


    _Class.prototype._changeItems = function(event, items) {
      var changed,
        _this = this;

      if (this._filter) {
        changed = items.filter(this._filter);
      } else {
        changed = items;
      }
      return async.map(changed, (function(item, next) {
        return _this.__transform("to", item, function(err, item) {
          if (err) {
            throw err;
          }
          return next(null, item);
        });
      }), function(err, items) {
        if (err) {
          throw err;
        }
        return _this._change(event, items);
      });
    };

    /*
    */


    _Class.prototype._change = function(event, item) {};

    /*
    */


    _Class.prototype.bothWays = function() {};

    /*
    */


    _Class.prototype.__transform = function(method, value, next) {
      return utils.tryTransform(this._transformer, method, value, next);
    };

    return _Class;

  })();

}).call(this);
