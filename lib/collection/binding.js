// Generated by CoffeeScript 1.4.0
(function() {
  var SettersFactory, Transformer, settersFactory;

  SettersFactory = require("./setters/factory");

  settersFactory = new SettersFactory();

  Transformer = require("../core/transformer");

  module.exports = (function() {
    /*
    */

    function _Class(_from) {
      this._from = _from;
      this._setters = [];
      this._listen();
    }

    /*
    */


    _Class.prototype.transform = function(value) {
      if (!arguments.length) {
        return this._transformer;
      }
      this._transformer = new Transformer(value);
      return this;
    };

    /*
    */


    _Class.prototype.to = function(collection) {
      var setter;
      setter = settersFactory.createSetter(this, collection);
      if (setter) {
        this._setters.push(setter);
      }
      return this;
    };

    /*
    */


    _Class.prototype._listen = function() {
      var event, _i, _len, _ref, _results,
        _this = this;
      _ref = ["insert", "remove", "update"];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        _results.push((function(event) {
          return _this._from.on(event, function(item, index) {
            return _this._callSetters(event, item, index);
          });
        })(event));
      }
      return _results;
    };

    /*
    */


    _Class.prototype._callSetters = function(method, item) {
      var setter, _i, _len, _ref, _results;
      _ref = this._setters;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        setter = _ref[_i];
        _results.push(setter.change(method, item));
      }
      return _results;
    };

    return _Class;

  })();

}).call(this);
